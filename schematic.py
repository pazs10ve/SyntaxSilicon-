import subprocess
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import os


def generate_and_display_schematic(verilog_file="generated_module.v"):
    """
    Generate and display schematic from Verilog using Yosys + Graphviz.
    Returns:
        - Path to schematic image if successful
        - None if failed
    """
    # Hardcoded default paths
    yosys_path = r"C:\msys64\mingw64\bin\yosys.exe"         # Yosys executable
    dot_path = r"C:\Program Files\Graphviz\bin\dot.exe"     # Graphviz dot executable

    try:
        # Step 1: Check Verilog file
        verilog_file = os.path.abspath(verilog_file)
        if not os.path.exists(verilog_file):
            print(f"Error: File '{verilog_file}' not found.")
            return None
        print(f"Found Verilog file: {verilog_file}")

        # Step 2: Verify tool paths
        if not os.path.exists(yosys_path):
            print(f"Error: Yosys not found at '{yosys_path}'. Install via 'pacman -S mingw-w64-x86_64-yosys'.")
            return None
        if not os.path.exists(dot_path):
            print(f"Error: Graphviz 'dot' not found at '{dot_path}'. Install Graphviz.")
            return None

        # Step 3: Run Yosys to generate DOT file
        dot_file = "schematic.dot"
        print("Running Yosys to generate DOT file...")
        yosys_cmd = [
            yosys_path,
            "-p", f"read_verilog {verilog_file}; show -format dot -prefix schematic"
        ]
        result = subprocess.run(
            yosys_cmd,
            capture_output=True,
            text=True,
            check=True
        )
        print("Yosys output:", result.stdout)
        if result.stderr:
            print("Yosys warnings/errors:", result.stderr)

        # Step 4: Check for DOT file
        if not os.path.exists(dot_file):
            print("Error: No DOT file generated by Yosys. Check Verilog syntax or Yosys output.")
            return None
        print(f"Found DOT file: {dot_file}")

        # Step 5: Convert DOT to PNG using Graphviz
        output_png = "schematic.png"
        print("Running Graphviz...")
        dot_cmd = [
            dot_path,
            "-Tpng",
            "-o", output_png,
            dot_file
        ]
        subprocess.run(dot_cmd, check=True)

        # Step 6: Display the schematic
        if os.path.exists(output_png):
            print(f"Schematic generated: {output_png}")
            img = mpimg.imread(output_png)
            plt.figure(figsize=(12, 8))
            plt.imshow(img)
            plt.axis('off')
            plt.title("Verilog Schematic (Yosys)")
            plt.show()
            return output_png
        else:
            print("Error: Failed to generate schematic image.")
            return None

    except subprocess.CalledProcessError as e:
        print("Error occurred during execution:")
        print("Command:", e.cmd)
        print("Error output:", e.stderr)
        return None
    except FileNotFoundError as e:
        print(f"Error: Tool not found - {e}")
        print(f"Ensure Yosys is at '{yosys_path}' and Graphviz is at '{dot_path}'.")
        return None
    except Exception as e:
        print(f"Error in schematic generation: {e}")
        return None

# Example usage
if __name__ == "__main__":
    generate_and_display_schematic("generated_module.v")